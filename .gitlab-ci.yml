image: index.docker.io/ericwf/libcxx-gitlab-runner:latest
variables:
  LLVM_PROJECT: $CI_BUILDS_DIR/$CI_PROJECT_PATH/llvm-project
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_PATH/llvm-project
  GIT_STRATEGY: none
  GIT_DEPTH: 1

stages:
  - stage
  - build
  - test

.staged-llvm:
  artifacts:
    when: always
    paths:
      - llvm-project/
      - build/

.staged-libcxx:
  extends: .staged-llvm
  artifacts:
    when: always
    paths:
      - build/libcxx/

stage:libcxx:
  extends: .staged-libcxx
  stage: stage
  variables:
    GIT_STRATEGY: clone
  script:
    - $LLVM_PROJECT/llvm/utils/gitlab/display_environment.sh
    - mkdir -p build/libcxx
    - touch build/libcxx/BUILD_HERE


build:libcxx:
  extends: .staged-libcxx
  stage: build
  variables:
    CC: "clang"
    CXX: "clang++"
    LLVM_LIT_ARGS: "-sv --show-xfail --show-unsupported --xunit-xml-output=$CI_PROJECT_DIR/build/libcxx/test-results.xml"
    BUILD_TYPE: "RELWITHDEBINFO"
  script:
    - env
    - cd build/libcxx/
    - cmake -G Ninja "-DCMAKE_BUILD_TYPE=$BUILD_TYPE"
       "-DCMAKE_C_COMPILER=$CC"
       "-DCMAKE_CXX_COMPILER=$CXX"
       "-DLLVM_ENABLE_PROJECTS=libcxx;libcxxabi"
       "-DLLVM_LIT_ARGS=$LLVM_LIT_ARGS"
       $LLVM_PROJECT
    - ninja cxx
  dependencies:
    - stage:libcxx

test:libcxx:
  extends: .staged-libcxx
  stage: test
  script:
      - ls
      - cd build/libcxx
      - ninja check-cxxabi
      - ninja check-cxx
      - ninja check-cxx-benchmarks
      - ninja check-cxx-abilist
  dependencies:
    - build:libcxx
  artifacts:
    when: always
    reports:
      junit: build/libcxx/test-results.xml
